questions = [
    {
        'question': 'Які основні принципи ООП?',
        'options': ['спадкування, інкапсуляція, поліморфізм', 'успадкування, перегрузка, наслідування', 'абстракція, інтерфейс, наслідування', 'інкапсуляція, поліморфізм, абстракція'],
        'correct_answer': 'енкапсуляція, поліморфізм, абстракція'
    },
    {
        'question': 'Що таке "динамічна типізація" у Python?',
        'options': ['Можливість змінювати типи даних під час виконання програми.', 'Статична перевірка типів даних під час компіляції програми.', 'Обмеження на типи даних, які можуть бути використані у програмі.', 'Механізм автоматичної конвертації типів даних.'],
        'correct_answer': 'Можливість змінювати типи даних під час виконання програми.'
    },
    {
        'question': 'Що таке "анонімна функція" у Python?',
        'options': ['Функція, яка не має імені.', 'Функція, яка викликається без параметрів.', 'Функція, яка використовується для анонімного класу.', 'Функція, яка визначається в іншій функції.'],
        'correct_answer': 'Функція, яка не має імені.'
    },
    {
        'question': 'Яким чином можна зменшити розмір списку в Python?',
        'options': ['За допомогою функції resize().', 'Видаливши елементи списку.', 'Використовуючи функцію size().', 'За допомогою методу append().'],
        'correct_answer': 'Видаливши елементи списку.'
    },
    {
        'question': 'Що таке "генератор списку" у Python?',
        'options': ['Спеціальна функція для створення списків.', 'Об\'єкт, який виробляє послідовність значень при потребі.', 'Метод для автоматичного генерування випадкових списків.', 'Вбудована функція для впорядкування списків.'],
        'correct_answer': 'Об\'єкт, який виробляє послідовність значень при потребі.'
    },
    {
        'question': 'Як можна створити клас у Python?',
        'options': ['Викликавши функцію create_class().', 'Використовуючи ключове слово def.', 'Викликавши функцію class().', 'Використовуючи ключове слово class.'],
        'correct_answer': 'Використовуючи ключове слово class.'
    },
    {
        'question': 'Яким чином можна наслідувати клас у Python?',
        'options': ['Використовуючи ключове слово extends.', 'Викликавши функцію inherit_class().', 'Використовуючи ключове слово inherits.', 'Вказавши батьківський клас у визначенні нового класу.'],
        'correct_answer': 'Вказавши батьківський клас у визначенні нового класу.'
    },
    {
        'question': 'Що таке "властивість" (property) у Python?',
        'options': ['Публічний атрибут класу.', 'Спеціальний метод для доступу до приватних атрибутів.', 'Змінна, яка зберігається в об\'єкті класу.', 'Механізм, який дозволяє контролювати доступ до атрибутів об\'єкта.'],
        'correct_answer': 'Механізм, який дозволяє контролювати доступ до атрибутів об\'єкта.'
    },
    {
        'question': 'Яким чином можна імпортувати модуль у Python?',
        'options': ['За допомогою ключового слова import.', 'Використовуючи функцію include().', 'Викликаючи метод import_module().', 'За допомогою ключового слова require.'],
        'correct_answer': 'За допомогою ключового слова import.'
    },
    {
        'question': 'Яка функція використовується для виведення тексту в консоль в Python?',
        'options': ['print()', 'echo()', 'show()', 'display()'],
        'correct_answer': 'print()'
    },
]
